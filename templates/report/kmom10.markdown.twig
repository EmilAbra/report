Kmom10
-------
**För varje krav du implementerat, dvs 1-3, 4, 5, 6, skriver du ett textstycke om ca 5-10 meningar där du beskriver hur du löste kravet. Poängsättningen tar sin start i din text så se till att skriva väl för att undvika poängavdrag. Missar du att skriva/dokumentera din lösning så blir det 0 poäng. Du kan inte komplettera en inlämning för att få högre betyg.**

**Krav 1, 2, 3**
Eftersom jag är en gammal poker-räv online kände jag det naturligt att välja att göra ett pokerspel á la Texas Hold'em.
Jag tittade på specifikationen för projektet redan vid cirka kmom05 för att ha tid på att planera i huvudet hur jag skulle strukturera
det. Det kändes mycket att göra ett fullkomligt Texas Hold'em med många omgångar med satsningar och "A.I."-kod. Jag luskade runt på Dbwebbs Discord och läste om Casino Hold'em som verkade lättare att åstadkomma. Jag tittade på Wikipedia om spelet och kände att det var bättre lämpat tidsmässigt att utföra. Jag valde att omkasta reglerna något eftersom två spelare möts i en "heads-up". Jag valde ändå att kopiera oddsen för händerna som fanns.

I min utforskning över spelet poker på nätet och i kod-form

Jag hade nu en plan och det började snurra i huvudet om vilka klasser jag behöver. Efter kmom05 och biblioteket hade jag lärt mig en hel del. Jag kände det viktigt att göra "test-cases" samtidigt som jag gjorde klasserna, något jag inte gjorde i de tidigare uppgifterna. Jag förstår nu att man vill se att klassen ska göra vad den är till för oavsett vilka andra klasser den är beroende utav.

Jag visste att jag här kunde använda mig av de klasser jag haft i kortspelet 21 från kmom04. Således började jag med att bygga skalet för projektet genom att lägga till "controllern" och en "route" för sidan "proj". Jag la även till en ny sida i navbaren och kopierade in alla klasser från "Game" till en ny mapp "Proj".

Nu hade jag något att börja med. Jag visste att det svåra med uppgiften var att få till en klass som räknar ut vad varje spelare har för värde på sin kort-hand. Vid sidan av att jag modifierade flera av de klasser jag redan hade var detta något jag började med ganska tidigt.

För att åstadkomma en ORM-koppling med databasen kände jag att jag kunde spara detaljer om informationen om de två spelande, med namn, saldo, och länk till bild. Dessutom kom jag på senare att jag kunde lagra oddsen på varje poker-hand i databasen, för att hämta och skriva ut i en tabell jämte spelets kort. Samma tabell som jag använde i en konstant "array" för att räkna ut hur mycket spelaren som vann skulle få i klassen "CasinoHoldem".

När det gäller en ny stil luskade jag runt på nätet efter casino sidor och hittade färger som jag tycker passar med de ofta dunkla spel-miljöerna, svart, grönt, och rött. Jag gjorde en kopia av "base-templaten" och döpte om den till projektet. Därefter kunde jag använden den för mina "casino-templates" med ändrad källa för css-koden så att de endast påverkade dem. En ny mapp för css-koden skapades därmed för det. Jag valde att ta bort footern från den nya "basen" då den tog för mycket plats och inte behövdes då jag hade spelarens användar-information där. Jag ville inte att användaren skulle ha en scrollbar ner till en footer.



**Skriv ett allmänt stycke om hur projektet gick att genomföra. Problem/lösningar/strul/enkelt/svårt/snabbt/lång tid, etc. Var projektet lätt eller svårt? Tog det lång tid? Vad var svårt och vad gick lätt? Var det ett bra och rimligt projekt för denna kursen?**

Jag tycker projektet var rimligt efter allt vi har gjort i tidigare kmoms. Det var ett snäpp högre i svårighetsgrad än spelet 21, som jag gillade, och gjorde att utmaningen blev ett kall.

Det som var svårt var att komma på i vilken stor utsträckning projektet skulle vara. Gills det om jag gör en enklare version av Texas Holdem än vad som står. Jag tänkte ofta om detta är för enkelt att utföra eller om jag behöver visa mer. Det är svårt att veta var gränsen går. Samtidigt vet jag att det utrycklicken ska göras så enkelt som möjligt. Kanske var det att jag ställde för höga krav på mig själv, jag vet inte.

Det tog tid att lösa själva logiken med handreglerna och lusta ut vilka klasser man skulle använda. Över lag är jag nöjd med projektet och tycker att det är på en lagom nivå, samtidigt som jag har lärt mig mycket.



**Avsluta med ett sista stycke med dina tankar om kursen och vad du anser om materialet och handledningen (ca 5-10 meningar). Ge feedback till lärarna och förslå eventuella förbättringsförslag till kommande kurstillfällen. Är du nöjd/missnöjd? Kommer du att rekommendera kursen till dina vänner/kollegor? På en skala 1-10, vilket betyg ger du kursen?**

Denna kursen har lärt mig mycket om objekt-orienterad kodning. Det har fått mig att framför allt tänka på hur klasserna är strukturerade och vad man lägger i klasserna.

Att få använda ramverket Symfoni mixat med ett lager av ORM har lärt mig mycket om webbprogrammering. Det gav mig den nya insikten om att en rad i databasens tabeller kan omvandlas till ett objekt.

Jag har fått använda terminalen på min Mac, Atom som textredigerare, varierat med Google Chrome, mycket. Det har
gjort att jag slipat på mycket av mina föregående kunskaper. Jag tycker jag har lärt mig mycket av hur jag använder mitt tangentbord under kursen och hittat nya lösniningar.

Handledningen har jag inte mycket att klaga på. Det kändes mycket att göra i kmom02 med kortleken och som borde spridits ut mer, kanske på kmom01 som var lättare. Föreläsningarna är bra och tydliga. Jag gillar Mikaels positiva lynne :)

För att summera tycker jag att kursen är värd 9/10 "Entitys".
